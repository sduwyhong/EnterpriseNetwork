<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.enterpriseNetwork.dao.admin.AdminDao">
	<insert id="insert">
		INSERT INTO admin
		VALUES
			(#{id},
			#{admin_no},
			#{password},
			#{name},
			#{gender},
			#{age},
			#{email},
			#{enterprise_id})
	</insert>
	
	<insert id="addProduct">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO product
		VALUES
			(#{id},
			#{name},
			#{description},
			#{enterprise_id})
	</insert>
	
	<insert id="addComposition">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO compose_relation
		VALUES
			(#{id},
			#{productId},
			#{compositionId})
	</insert>
	
	<insert id="delegateEnterprise">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO employee_enterprise
		VALUES
			(#{id},
			#{employeeId},
			#{enterpriseId})
	</insert>
	
	<insert id="delegateProduct">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO employee_product
		VALUES
			(#{id},
			#{employeeId},
			#{productId})
	</insert>
	
	<insert id="corporate">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO enterprise_relation
		VALUES
			(#{id},
			#{enterprise_id_1},
			#{enterprise_id_2},
			#{supply},#{stock},
			#{distribution})
	</insert>
	
	<delete id="delete">
		DELETE FROM admin
		WHERE id = #{id}
	</delete>
	
	<delete id="deleteEmployee">
		DELETE FROM employee
		WHERE id = #{employeeId}
	</delete>
	
	<delete id="deleteProduct">
		DELETE FROM product
		WHERE id = #{productId}
	</delete>
	
	<delete id="deleteComposition">
		DELETE FROM compose_relation
		WHERE product_id = #{productId}
		AND composition_id  = #{compositionId}
	</delete>
	
	<delete id="cancelDelegationOfEnterprise">
		DELETE FROM employee_enterprise
		WHERE employee_id = #{employeeId}
		AND enterprise_id = #{enterpriseId}
	</delete>
	
	<delete id="cancelDelegationOfProduct">
		DELETE FROM employee_product
		WHERE employee_id = #{employeeId}
		AND product_id = #{productId}
	</delete>
	
	<delete id="cancelCorporation">
		DELETE FROM enterprise_relation
		WHERE (enterprise_id_1 = #{enterpriseId} AND enterprise_id_2 = #{partnerId})
		OR  (enterprise_id_1 = #{partnerId} AND enterprise_id_2 = #{enterpriseId})
	</delete>
	
	<update id="update">
		UPDATE admin
		SET 
			admin_no = #{admin_no},
			password = #{password},
			name = #{name},
			gender = #{gender},
			age = #{age},
			email = #{email},
			enterprise_id = #{enterprise_id}
		WHERE id = #{id}
	</update>
	
	<select id="get" resultType="Admin">
		SELECT *
		FROM admin
		WHERE id = #{id}
	</select>
	
	<select id="getAll" resultType="Admin">
		SELECT *
		FROM admin
	</select>
	
	<select id="getByNo" resultType="Admin">
		SELECT *
		FROM admin
		WHERE admin_no = #{admin_no}
	</select>
</mapper>