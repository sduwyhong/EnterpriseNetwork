<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.enterpriseNetwork.dao.admin.AdminDao">
	<insert id="insert">
		INSERT INTO admin
		VALUES
			(#{id},
			#{admin_no},
			#{password},
			#{name},
			#{gender},
			#{age},
			#{email},
			#{enterprise_id})
	</insert>
	
	<insert id="addProduct">
		INSERT INTO product
			(name,
			description,
			enterprise_id)
		VALUES
			(#{name},
			#{description},
			#{enterprise_id})
	</insert>
	
	<insert id="addComposition">
		INSERT INTO compose_relation
			(product_id,
			composition_id)
		VALUES
			(#{productId},
			#{compositionId})
	</insert>
	
	<insert id="delegateEnterprise">
		INSERT INTO employee_enterprise
			(employee_id,
			enterprise_id)
		VALUES
			(#{employeeId},
			#{enterpriseId})
	</insert>
	
	<insert id="delegateProduct">
		INSERT INTO employee_product
			(employee_id,
			product_id)
		VALUES
			(#{employeeId},
			#{productId})
	</insert>
	
	<insert id="corporate">
		INSERT INTO enterprise_relation
			(enterprise_id_1,
			enterprise_id_2,
			supply,
			stock,
			distribution)
		VALUES
			(#{enterprise_id_1},
			#{enterprise_id_2},
			#{supply},
			#{stock},
			#{distribution})
	</insert>
	
	<delete id="delete">
		DELETE FROM admin
		WHERE id = #{id}
	</delete>
	
	<delete id="deleteEmployee">
		DELETE FROM employee
		WHERE id = #{employeeId}
	</delete>
	
	<delete id="deleteProduct">
		DELETE FROM product
		WHERE id = #{productId};
	</delete>
	
	<delete id="deleteAllCompositionRelation">
		DELETE FROM compose_relation
		WHERE product_id = #{productId};
	</delete>
	
	<delete id="deleteComposition">
		DELETE FROM compose_relation
		WHERE product_id = #{productId}
		AND composition_id  = #{compositionId}
	</delete>
	
	<delete id="cancelDelegationOfEnterprise">
		DELETE FROM employee_enterprise
		WHERE employee_id = #{employeeId}
		AND enterprise_id = #{enterpriseId}
	</delete>
	
	<delete id="cancelDelegationOfProduct">
		DELETE FROM employee_product
		WHERE employee_id = #{employeeId}
		AND product_id = #{productId}
	</delete>
	
	<delete id="cancelCorporation">
		DELETE FROM enterprise_relation
		WHERE (enterprise_id_1 = #{enterpriseId} AND enterprise_id_2 = #{partnerId})
		OR  (enterprise_id_1 = #{partnerId} AND enterprise_id_2 = #{enterpriseId})
	</delete>
	
	<update id="update">
		UPDATE admin
		SET 
			admin_no = #{admin_no},
			password = #{password},
			name = #{name},
			gender = #{gender},
			age = #{age},
			email = #{email},
			enterprise_id = #{enterprise_id}
		WHERE id = #{id}
	</update>
	
	<select id="get" resultType="Admin">
		SELECT *
		FROM admin
		WHERE id = #{id}
	</select>
	
	<select id="getAll" resultType="Admin">
		SELECT *
		FROM admin
	</select>
	
	<select id="getByNo" resultType="Admin">
		SELECT *
		FROM admin
		WHERE admin_no = #{admin_no}
		AND enterprise_id = #{enterpriseId}
	</select>
	
	<select id="getEmployees" resultType="Employee">
		SELECT *
		FROM employee
		WHERE enterprise_id = #{enterpriseId}
	</select>

	<!-- LEFT JOIN 解决了不存在则返回空值的问题 -->	
	<select id="getProducts" resultType="ProductVO">
		SELECT p.*,e.id employee_id,e.name employee_name
		FROM product p 
		LEFT OUTER JOIN (employee_product ep
		LEFT OUTER JOIN employee e
		ON ep.employee_id = e.id)
		ON p.id = ep.product_id
		WHERE p.enterprise_id = #{enterpriseId}
	</select>
	
	<select id="getCompositions" resultType="CompositionVO">
		SELECT 
			p1.id productId,
			p1.name product_name,
			p2.id compositionId,
			p2.name composition_name,
			en.name composition_enterprise
		FROM product p1,compose_relation cr,product p2,enterprise en
		WHERE p1.id = cr.product_id
		AND p2.id = cr.composition_id
		AND p1.enterprise_id = #{enterpriseId}
		AND en.id = p2.enterprise_id
	</select>
	
	<select id="getCorporations" resultType="Corporation">
	<!-- 
		SELECT 
		e1.id enterprise_id_1,
		e1.name enterprise_1_name,
		e2.id enterprise_id_2,
		e2.name enterprise_2_name,
		er.supply,
		er.stock,
		er.distribution,
		em.id employee_id,
		em.name employee_name
		FROM enterprise e1 
		INNER JOIN enterprise_relation er 
		ON e1.id = er.enterprise_id_1 
		AND e1.id = #{enterpriseId} 
		INNER JOIN enterprise e2 
		ON e2.id = er.enterprise_id_2 
		LEFT OUTER JOIN employee_enterprise ee 
		ON ee.enterprise_id = er.enterprise_id_2 
		LEFT OUTER JOIN employee em 
		ON em.id = ee.employee_id
		AND em.enterprise_id = e1.id
	 -->
	 	SELECT 
			e1.id enterprise_id_1,
			e1.name enterprise_1_name,
			e2.id enterprise_id_2,
			e2.name enterprise_2_name,
			er.supply,
			er.stock,
			er.distribution
		FROM enterprise e1
		INNER JOIN enterprise_relation er
		ON er.enterprise_id_1 = e1.id
		AND e1.id = #{enterpriseId}
		INNER JOIN enterprise e2
		ON er.enterprise_id_2 = e2.id
	</select>
	
	<select id="getInCharge" resultType="Employee">
		SELECT em.id,em.name
		FROM employee em,employee_enterprise ee
		WHERE em.id = ee.employee_id
		AND ee.enterprise_id = #{partnerId}
		AND em.enterprise_id = #{enterpriseId}
	</select>
	
	<select id="getEnterprises" resultType="Enterprise">
		SELECT *
		FROM enterprise
	</select>
	
	<select id="getPretentialCompositions" resultType="Product">
		SELECT *
		FROM product
		WHERE enterprise_id != #{enterpriseId}
	</select>
	
	<select id="getPretentialCorporations" resultType="Enterprise">
		SELECT en.*
		FROM enterprise en 
		INNER JOIN enterprise_relation er
		ON 	er.enterprise_id_1 = #{enterpriseId}
		AND en.id != er.enterprise_id_2
		AND en.id != #{enterpriseId}
	</select>
	
	<select id="getOtherEnterprises" resultType="Enterprise">
		SELECT *
		FROM enterprise
		WHERE id != #{enterpriseId}
	</select>
	
	<select id="getEmployeeInfoByPartner" resultType="Corporation">
		SELECT em.name employee_name,em.id employee_id
		FROM employee em,employee_enterprise ee
		WHERE em.enterprise_id = #{enterpriseId}
		AND ee.enterprise_id = #{partnerId}
		AND em.id = ee.employee_id
	</select>
	
	<select id="getEmployeeIdByCorporatioin" resultType="java.lang.String">
		SELECT em.id
		FROM employee em,employee_enterprise ee
		WHERE ee.employee_id = em.id
		AND ee.enterprise_id = #{partnerId}
		AND em.enterprise_id = #{enterpriseId}
	</select>
</mapper>